# FLYWAY (FlywayProperties)
flyway:
  baseline-description: Previous CAS deployment schema #
  baseline-version: 1 # version to start migration
  baseline-on-migrate: true #
#  check-location: false # Check that migration scripts location exists.
  clean-on-validation-error: false # Warning ! Do not enable in production ! Whether to automatically call clean or not when a validation error occurs.
  enabled: true # Enable flyway.
#  encoding: UTF-8 #
  ignore-failed-future-migration: false #
#  init-sqls: # SQL statements to execute to initialize a connection immediately after obtaining it.
  locations: classpath:db/migration # locations of migrations scripts
#  out-of-order: false # Allows migrations to be run "out of order". If you already have versions 1 and 3 applied, and now a version 2 is found, it will be applied too instead of being ignored.
#  password: # JDBC password if you want Flyway to create its own DataSource
#  placeholder-prefix: #
#  placeholder-replacement: #
#  placeholder-suffix: #
#  placeholders.*: #
#  schemas: # schemas to update
#  sql-migration-prefix: V #
#  sql-migration-separator: __ #
#  sql-migration-suffix: .sql #
#  table: #
#  url: # JDBC url of the database to migrate. If not set, the primary configured data source is used.
#  user: # Login user of the database to migrate.
#  validate-on-migrate: true #

cas:
  serviceRegistry: # TODO REPLACE THIS WITH SOMETHING STORED IN A DATABASE
    config:
      location: classpath:/services
  authn:
    accept:
      users: ''
    attributeRepository:
      expireInMinutes: 30
      maximumCacheSize: 10000 #TODO TUNING
      merger: MERGE
# Attributes that you wish to resolve for the principal
      defaultAttributesToRelease: id,userid,givenName,sn,firstname,lastname,email,affiliation,organisation,city,state,country,role,authority,telephone,primaryUserType,secondaryUserType

      jdbc:
        - driverClass: com.mysql.jdbc.Driver
          requireAllAttributes: false
          # caseCanonicalization=NONE|LOWER|UPPER
          caseCanonicalization: NONE
          queryType: AND
          singleRow: false
          # TODO determine whether calling a stored proc is officially supported by the Apereo JDBC PersonDir
          sql: call sp_get_user_attributes(?);
          # username is not used because we don't use {0} in sql: above
          username: username
          # Used only when there is a mapping of many rows to one user
          columnMappings:
            key: value
          attributes:
            userid: userid
            id: id
            givenName: givenName
            firstname: firstname
            sn: sn
            lastname: lastname
            email: email
            authority: authority
            role: role
            affiliation: affiliation
            organisation: organisation
            city: city
            state: state
            country: country
            telephone: telephone
            primaryUserType: primaryUserType
            secondaryUserType: secondaryUserType
    jdbc:
      query:
        - sql: SELECT p.password as password, u.locked as disabled, p.expiry < CURRENT_TIMESTAMP() as expired FROM passwords p JOIN users u ON u.userid = p.userid AND u.activated = 1 AND p.status = 'CURRENT' AND p.type = 'bcrypt' WHERE u.username = ?;
          fieldPassword: password
          fieldDisabled: disabled
#          fieldExpired: expired
          driverClass: com.mysql.jdbc.Driver
          # principalAttributeList:sn,cn:commonName,givenName
          passwordEncoder:
            type: BCRYPT
            characterEncoding: UTF-8
            strength: 10
        - sql: SELECT p.password as password, u.locked as disabled, p.expiry < CURRENT_TIMESTAMP() as expired FROM passwords p JOIN users u ON u.userid = p.userid AND u.activated = 1 AND p.status = 'CURRENT' WHERE u.username = ?;
          fieldPassword: password
          fieldDisabled: disabled
#          fieldExpired: expired
          driverClass: com.mysql.jdbc.Driver
          passwordEncoder:
            type: au.org.ala.cas.password.AlaPasswordEncoder
    pac4j:
      typedIdUsed: true
#      autoRedirect: false
#      name:
      facebook:
        # fields:
        scope: public_profile,email
      google:
        scope: EMAIL_AND_PROFILE
        # scope=EMAIL|PROFILE|EMAIL_AND_PROFILE

  monitor:
    jdbc:
      driverClass: com.mysql.jdbc.Driver
      validationQuery: /* ping */ SELECT 1

  tgc:
    maxAge: -1
    secure: true
    httpOnly: true
    rememberMeMaxAge: 1209600 # P14D
#    encryptionKey=
#    signingKey=
#    cipherEnabled=true
  theme:
    default-theme-name: ala
  ticket:
    tgt:
      rememberMe:
        enabled: true
        timeToKillInSeconds: 1209600 # P14D
    registry:
      cleaner:
        appId: cas-ticket-registry-cleaner
#       startDelay: 10000
#       repeatInterval: 60000
#       enabled: true

      jpa:
        jpaLockingTimeout: 3600
        driverClass: com.mysql.jdbc.Driver
        ddl-auto: validate
        dialect: org.hibernate.dialect.MySQL57Dialect
        jpaLockingTgtEnabled: true
#       crypto:
#          signing:
#            key:
#            keySize: 512
#          encryption:
#            key:
#            keySize: 16
#          alg: AES
#  jdbc:
#    showSql: true
#    genDdl: true
  logout:
    followServiceRedirects: true
    redirectParameter: url
    confirmLogout: false
  slo:
    disabled: false
    asynchronous: true
spring:
  jpa:
    show-sql: false
    properties:
      hibernate:
        show_sql: false
# Override these for non-ALA deployments
ala:
  cookie:
    domain: ala.org.au
    httpOnly: true
    maxAge: -1
    name: ALA-Auth
    path: /
    secure: false
  userCreator:
    passwordEncoder: # This should be the same as the primary password encoder above
      type: BCRYPT
      characterEncoding: UTF-8
      strength: 10
    jdbc:
      driverClass: com.mysql.jdbc.Driver
      createUserProcedure: "sp_create_user"
  skin:
    baseUrl: https://www.ala.org.au/
    headerFooterUrl: ${ala.skin.baseUrl}commonui-bs3/
    favIconBaseUrl: ${ala.skin.baseUrl}wp-content/themes/ala-wordpress-theme/img/favicon/
    bieBaseUrl: https://bie.ala.org.au/
    bieSearchPath: search
    userDetailsUrl: https://auth.ala.org.au/userdetails/
    orgShortName: ALA
    orgLongName: Atlas Of Living Australia
    orgNameKey: ala
    cacheDuration: 1800000 # P30m
debug: false